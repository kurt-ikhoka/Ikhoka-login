plugins {
    id 'com.android.application'
    id 'kotlin-android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'androidx.navigation.safeargs.kotlin'
    id 'kotlin-parcelize'
}

android {
    namespace 'com.ikhoka'
    compileSdk rootProject.compileSdkVersion

    defaultConfig {
        applicationId "com.ikhoka"
        minSdk rootProject.minSdkVersion
        targetSdk rootProject.targetSdkVersion
        versionCode 1
        versionName "1.0"
        testInstrumentationRunner = "com.ikhoka.HiltTestRunner"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        viewBinding true
        dataBinding true
    }
    // Always show the result of every unit test, even if it passes.
    testOptions.unitTests {
        includeAndroidResources = true
        all {
            testLogging {
                events 'passed', 'skipped', 'failed', 'standardOut', 'standardError'
            }
        }
    }
    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    kotlinOptions {
        jvmTarget = JavaVersion.VERSION_1_8
    }
}

dependencies {

    implementation 'androidx.core:core-ktx:1.9.0'
    implementation 'androidx.appcompat:appcompat:1.5.1'
    implementation 'com.google.android.material:material:1.6.1'
    implementation 'androidx.constraintlayout:constraintlayout:2.1.4'
    implementation "androidx.activity:activity-ktx:${versions.activity_ktx}"

    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:${versions.lifecycle}"

    implementation "com.google.dagger:hilt-android:${versions.hilt}"

    implementation "androidx.room:room-ktx:${versions.room}"
    kapt "androidx.room:room-compiler:${versions.room}"

    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-core:${versions.coroutines}"
    implementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"

    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"

    // Hilt testing
    api "com.google.dagger:hilt-android-testing:${versions.hilt}"
    api "com.google.dagger:hilt-android-testing:${versions.hilt}"
    kaptAndroidTest "com.google.dagger:hilt-android-compiler:${versions.hilt}"

    kapt "com.google.dagger:hilt-android-compiler:${versions.hilt}"
    kapt "androidx.hilt:hilt-compiler:${versions.hilt_compiler}"
    testImplementation 'junit:junit:4.13.2'
    androidTestImplementation 'androidx.test.ext:junit:1.1.3'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.4.0'

    //Testing dependencies

    androidTestImplementation "org.amshove.kluent:kluent-android:${versions.kluent}"
    testImplementation "org.amshove.kluent:kluent:${versions.kluent}"
    // To get JUnit errors from kotlin.test, to e.g. enable diff windows in failure messages
    testImplementation "org.jetbrains.kotlin:kotlin-test-junit:${versions.kotlin}"

    testImplementation "androidx.arch.core:core-testing:${versions.arch_core}"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-android:${versions.coroutines}"
    testImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"
    androidTestImplementation "org.jetbrains.kotlinx:kotlinx-coroutines-test:${versions.coroutines}"

    testImplementation "io.mockk:mockk:${versions.mockk}"

    testImplementation "app.cash.turbine:turbine:${versions.turbine}"

    androidTestImplementation "io.mockk:mockk-android:${versions.mockk}"
}